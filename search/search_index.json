{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Microbial Ecology Group (MEG) Our international multidisciplinary group of scientists and educators is addressing the issues of antimicrobial resistance (AMR) and microbial ecology in agriculture through research, outreach, and education. By characterizing risks related to AMR and microbial ecology, our center will identify agricultural production practices that are harmful and can be avoided, while also identifying and promoting production practices and interventions that are beneficial or do no harm to the ecosystem or public health. This will allow society to realize \u201csustainable intensification\u201d of agriculture. MEGARes and the AmrPlusPlus v2.0 bioinformatic pipeline The MEGARes database (https://megares.meglab.org/) contains sequence data for approximately 8,000 hand-curated antimicrobial resistance genes accompanied by an annotation structure that is optimized for use with high throughput sequencing and metagenomic analysis. The acyclical annotation graph of MEGARes allows for accurate, count-based, hierarchical statistical analysis of resistance at the population level, much like microbiome analysis, and is also designed to be used as a training database for the creation of statistical classifiers. The latest update in MEGARes 2.0 ( https://megares.meglab.org ) incorporates previously published resistance sequences for antimicrobial drugs, while also expanding to include published sequences for metal and biocide resistance determinants. The goal of many metagenomics studies is to characterize the content and relative abundance of sequences of interest from the DNA of a given sample or set of samples. You may want to know what is contained within your sample or how abundant a given sequence is relative to another. Often, metagenomics is performed when the answer to these questions must be obtained for a large number of targets where techniques like multiplex PCR and other targeted methods would be too cumbersome to perform. AmrPlusPlus v2.0 can process the raw data from the sequencer, identify the fragments of DNA, and count them. It also provides a count of the polymorphisms that occur in each DNA fragment with respect to the reference database. Additionally, you may want to know if the depth of your sequencing (how many reads you obtain that are on target) is high enough to identify rare organisms (organisms with low abundance relative to others) in your population. This is referred to as rarefaction and is calculated by randomly subsampling your sequence data at intervals between 0% and 100% in order to determine how many targets are found at each depth.With AmrPlusPlus v2.0, you will obtain alignment count files for each sample that can be combined into a count matrix and analyzed using any statistical and mathematical techniques that can operate on a matrix of observations. More Information References Citing AMR++ Accessing AMR Plus Plus v2.0 Installation Usage Configuration Output Dependencies Software Requirements FAQs Contact AmrPlusPlus v1","title":"Introduction"},{"location":"#microbial-ecology-group-meg","text":"Our international multidisciplinary group of scientists and educators is addressing the issues of antimicrobial resistance (AMR) and microbial ecology in agriculture through research, outreach, and education. By characterizing risks related to AMR and microbial ecology, our center will identify agricultural production practices that are harmful and can be avoided, while also identifying and promoting production practices and interventions that are beneficial or do no harm to the ecosystem or public health. This will allow society to realize \u201csustainable intensification\u201d of agriculture.","title":"Microbial Ecology Group (MEG)"},{"location":"#megares-and-the-amrplusplus-v20-bioinformatic-pipeline","text":"The MEGARes database (https://megares.meglab.org/) contains sequence data for approximately 8,000 hand-curated antimicrobial resistance genes accompanied by an annotation structure that is optimized for use with high throughput sequencing and metagenomic analysis. The acyclical annotation graph of MEGARes allows for accurate, count-based, hierarchical statistical analysis of resistance at the population level, much like microbiome analysis, and is also designed to be used as a training database for the creation of statistical classifiers. The latest update in MEGARes 2.0 ( https://megares.meglab.org ) incorporates previously published resistance sequences for antimicrobial drugs, while also expanding to include published sequences for metal and biocide resistance determinants. The goal of many metagenomics studies is to characterize the content and relative abundance of sequences of interest from the DNA of a given sample or set of samples. You may want to know what is contained within your sample or how abundant a given sequence is relative to another. Often, metagenomics is performed when the answer to these questions must be obtained for a large number of targets where techniques like multiplex PCR and other targeted methods would be too cumbersome to perform. AmrPlusPlus v2.0 can process the raw data from the sequencer, identify the fragments of DNA, and count them. It also provides a count of the polymorphisms that occur in each DNA fragment with respect to the reference database. Additionally, you may want to know if the depth of your sequencing (how many reads you obtain that are on target) is high enough to identify rare organisms (organisms with low abundance relative to others) in your population. This is referred to as rarefaction and is calculated by randomly subsampling your sequence data at intervals between 0% and 100% in order to determine how many targets are found at each depth.With AmrPlusPlus v2.0, you will obtain alignment count files for each sample that can be combined into a count matrix and analyzed using any statistical and mathematical techniques that can operate on a matrix of observations.","title":"MEGARes and the AmrPlusPlus v2.0 bioinformatic pipeline"},{"location":"#more-information","text":"References Citing AMR++ Accessing AMR Plus Plus v2.0 Installation Usage Configuration Output Dependencies Software Requirements FAQs Contact AmrPlusPlus v1","title":"More Information"},{"location":"FAQs/","text":"Troubleshooting and frequently asked questions (FAQs) Many errors that may be encountered may ultimately be the result of user error. If you encounter an error message any time that this pipeline is used, carefully check the command you used for any spelling errors. Additionally, many of these error messages give some detail as too where the code is wrong. Here are a few common errors and our suggestions for basic troubleshooting. Are you using the correct \"profile\" to run AmrPlusPlus? We provide many examples of profile configurations and choosing the correct one depends on your computing environment. If you have singularity installed on your server, we recommend using the \"singularity\" profile to avoid the installation of any additional tools. If you already have the tools installed on your server, the best option is to configure the local.config file to point to the absolute PATH to each too. Are the right user permissions are granted to the file/directory/server in which you are going to run the pipeline? In servers with multiple users, there are often cases in which certain directories give some users more editing privileges than others. Start by navigating to the directory in which you will be working. Next, type ls -lha or ls -l . This produces a list of all files in that directory and info on what permissions the user has using the -rwxrwxrwx scheme; r = read permissions, w = writing permissions, and x = execute permissions). Permission errors could be due to the directories chosen for the pipeline output or individual bioinformatic tools installed by other users, for example. Review this tutorial for more information regarding file permissions: https://www.guru99.com/file-permissions.html","title":"FAQ"},{"location":"FAQs/#troubleshooting-and-frequently-asked-questions-faqs","text":"Many errors that may be encountered may ultimately be the result of user error. If you encounter an error message any time that this pipeline is used, carefully check the command you used for any spelling errors. Additionally, many of these error messages give some detail as too where the code is wrong. Here are a few common errors and our suggestions for basic troubleshooting.","title":"Troubleshooting and frequently asked questions (FAQs)"},{"location":"FAQs/#are-you-using-the-correct-profile-to-run-amrplusplus","text":"We provide many examples of profile configurations and choosing the correct one depends on your computing environment. If you have singularity installed on your server, we recommend using the \"singularity\" profile to avoid the installation of any additional tools. If you already have the tools installed on your server, the best option is to configure the local.config file to point to the absolute PATH to each too.","title":"Are you using the correct \"profile\" to run AmrPlusPlus?"},{"location":"FAQs/#are-the-right-user-permissions-are-granted-to-the-filedirectoryserver-in-which-you-are-going-to-run-the-pipeline","text":"In servers with multiple users, there are often cases in which certain directories give some users more editing privileges than others. Start by navigating to the directory in which you will be working. Next, type ls -lha or ls -l . This produces a list of all files in that directory and info on what permissions the user has using the -rwxrwxrwx scheme; r = read permissions, w = writing permissions, and x = execute permissions). Permission errors could be due to the directories chosen for the pipeline output or individual bioinformatic tools installed by other users, for example. Review this tutorial for more information regarding file permissions: https://www.guru99.com/file-permissions.html","title":"Are the right user permissions are granted to the file/directory/server in which you are going to run the pipeline?"},{"location":"accessing_AMR/","text":"Accessing AMR++ This section will help you get access to all the bioinformatic tools required for metagenomic analysis with AMR++. Amazon Web Services In order to facilitate evaluation of the MEGARes 2.0 database and the functionality of AMR++ 2.0 pipeline, we have provided free access to an Amazon Machine Image (AMI) with example files for analysis. AMR++ 2.0 is pre-installed and fully integrated with all necessary bioinformatic tools and dependencies within an AMI named \"Microbial_Ecology_Group_AMR_AMI\", allowing users to easily employ the AMR++ v2.0 pipeline within the Amazon Web Services (AWS) ecosystem. Please follow the instructions on amazon web services for details on creating your own EC2 instance ( https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EC2_GetStarted.html ). With this approach, users pay for the cost of a suitable AWS EC2 instance without the challenge of accessing large computing clusters and individually installing each piece of software necessary to run the pipeline (including all dependencies). Integration within AWS also allows users to scale the computing resources to fit the needs of any project size. Singularity container Singularity containers allow the packaging of multiple bioinformatic tools. While singularity is a popular tool and likely to be supported by many computing clusters, please contact your system administrator for help with installing singularity. Installation on a local computer is also an option and can be performed by following these instructions: https://sylabs.io/guides/3.0/user-guide/installation.html We provide AMR++ with a singularity container that is automatically accessed when running the AMR++ pipeline by using the flag, \"-profile singularity\". Additionally, the singularity container is supported on singularity-hub.org and can be used locally for custom analysis (https://singularity-hub.org/collections/3418) . # Choose your preference to pull the container from Singularity Hub (once) $ singularity pull shub://meglab-metagenomics/amrplusplus_v2 # Then interact with it (enter \"exit\" to leave the singularity container): $ singularity shell amrplusplus_v2.sif","title":"Accessing AMR Plus Plus v2.0"},{"location":"accessing_AMR/#accessing-amr","text":"This section will help you get access to all the bioinformatic tools required for metagenomic analysis with AMR++.","title":"Accessing AMR++"},{"location":"accessing_AMR/#amazon-web-services","text":"In order to facilitate evaluation of the MEGARes 2.0 database and the functionality of AMR++ 2.0 pipeline, we have provided free access to an Amazon Machine Image (AMI) with example files for analysis. AMR++ 2.0 is pre-installed and fully integrated with all necessary bioinformatic tools and dependencies within an AMI named \"Microbial_Ecology_Group_AMR_AMI\", allowing users to easily employ the AMR++ v2.0 pipeline within the Amazon Web Services (AWS) ecosystem. Please follow the instructions on amazon web services for details on creating your own EC2 instance ( https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EC2_GetStarted.html ). With this approach, users pay for the cost of a suitable AWS EC2 instance without the challenge of accessing large computing clusters and individually installing each piece of software necessary to run the pipeline (including all dependencies). Integration within AWS also allows users to scale the computing resources to fit the needs of any project size.","title":"Amazon Web Services"},{"location":"accessing_AMR/#singularity-container","text":"Singularity containers allow the packaging of multiple bioinformatic tools. While singularity is a popular tool and likely to be supported by many computing clusters, please contact your system administrator for help with installing singularity. Installation on a local computer is also an option and can be performed by following these instructions: https://sylabs.io/guides/3.0/user-guide/installation.html We provide AMR++ with a singularity container that is automatically accessed when running the AMR++ pipeline by using the flag, \"-profile singularity\". Additionally, the singularity container is supported on singularity-hub.org and can be used locally for custom analysis (https://singularity-hub.org/collections/3418) . # Choose your preference to pull the container from Singularity Hub (once) $ singularity pull shub://meglab-metagenomics/amrplusplus_v2 # Then interact with it (enter \"exit\" to leave the singularity container): $ singularity shell amrplusplus_v2.sif","title":"Singularity container"},{"location":"citing/","text":"Citation for MEGARes 2.0 and AMR++ 2.0: Doster, E., Lakin, S. M., Dean, C. J., Wolfe, C., Young, J. G., Boucher, C., Belk K. E., Noyes N. R., Morley P. S. (2019) MEGARes 2.0: a database for classification of antimicrobial drug, biocide and metal resistance determinants in metagenomic sequence data. Nucleic Acids Res. doi:10.1093/nar/gkz1010. Click to Download Citation in different formats","title":"Citing AMR++"},{"location":"citing/#citation-for-megares-20-and-amr-20","text":"Doster, E., Lakin, S. M., Dean, C. J., Wolfe, C., Young, J. G., Boucher, C., Belk K. E., Noyes N. R., Morley P. S. (2019) MEGARes 2.0: a database for classification of antimicrobial drug, biocide and metal resistance determinants in metagenomic sequence data. Nucleic Acids Res. doi:10.1093/nar/gkz1010. Click to Download Citation in different formats","title":"Citation for MEGARes 2.0 and AMR++ 2.0:"},{"location":"configuration/","text":"","title":"Configuration"},{"location":"contact/","text":"Contact Questions, bugs, or feature requests should be directed to meglab.metagenomics@gmail.com","title":"Contact"},{"location":"contact/#contact","text":"Questions, bugs, or feature requests should be directed to meglab.metagenomics@gmail.com","title":"Contact"},{"location":"dependencies/","text":"Dependencies AmrPlusPlus uses a variety of open-source tools. The tools used, descriptions, and version specifics are provided below. Bedtools Description: Bedtools is a suite of tools that can be used to compute and extract useful information from BAM, BED, and BCF files. Version: 2.28.0 DOI: https://doi.org/10.1093/bioinformatics/btq033 BWA Description: BWA is a short and long read sequence aligner for aligning raw sequence data to a reference genome. Version: 0.7.17 DOI: https://doi.org/10.1093/bioinformatics/btp324 Kraken2 Description: Kraken is a fast taxonomic sequence classifier that assigns taxonomy labels to short-reads. Version: 2.0.8 DOI: https://doi.org/10.1186/gb-2014-15-3-r46 RarefactionAnalyzer Description: RarefactionAnalyzer is a tool that can be used for performing rarefaction analysis. Version: 0.0.0 DOI: https://doi.org/10.1093/nar/gkw1009 ResistomeAnalyzer Description: ResistomeAnalyzer is a tool for analyzing the resistome of large metagenomic datasets. Version: 0.0.0 DOI: https://doi.org/10.1093/nar/gkw1009 Samtools Description: Samtools is a program for manipulating and extracting useful information from alignment files in SAM or BAM format. Version: 1.9 DOI: https://doi.org/10.1093/bioinformatics/btp352 SNPFinder Description: SNPFinder is a haplotype variant caller that can be used for metagenomics datasets. Version: 0.0.0 DOI: https://doi.org/10.1093/nar/gkw1009 Trimmomatic Description: Trimmomatic is a tool for removing low quality base pairs (bps) and adapter sequences from raw sequence data. Version: 0.39 DOI: https://doi.org/10.1093/bioinformatics/btu170 Freebayes Description: Trimmomatic is a tool for removing low quality base pairs (bps) and adapter sequences from raw sequence data. Version: 1.3.1 https://arxiv.org/abs/1207.3907v2 Resistance Gene Identifier Description: Trimmomatic is a tool for removing low quality base pairs (bps) and adapter sequences from raw sequence data. Version: 0.39 https://card.mcmaster.ca/analyze/rgi","title":"Dependencies"},{"location":"dependencies/#dependencies","text":"AmrPlusPlus uses a variety of open-source tools. The tools used, descriptions, and version specifics are provided below.","title":"Dependencies"},{"location":"dependencies/#bedtools","text":"Description: Bedtools is a suite of tools that can be used to compute and extract useful information from BAM, BED, and BCF files. Version: 2.28.0 DOI: https://doi.org/10.1093/bioinformatics/btq033","title":"Bedtools"},{"location":"dependencies/#bwa","text":"Description: BWA is a short and long read sequence aligner for aligning raw sequence data to a reference genome. Version: 0.7.17 DOI: https://doi.org/10.1093/bioinformatics/btp324","title":"BWA"},{"location":"dependencies/#kraken2","text":"Description: Kraken is a fast taxonomic sequence classifier that assigns taxonomy labels to short-reads. Version: 2.0.8 DOI: https://doi.org/10.1186/gb-2014-15-3-r46","title":"Kraken2"},{"location":"dependencies/#rarefactionanalyzer","text":"Description: RarefactionAnalyzer is a tool that can be used for performing rarefaction analysis. Version: 0.0.0 DOI: https://doi.org/10.1093/nar/gkw1009","title":"RarefactionAnalyzer"},{"location":"dependencies/#resistomeanalyzer","text":"Description: ResistomeAnalyzer is a tool for analyzing the resistome of large metagenomic datasets. Version: 0.0.0 DOI: https://doi.org/10.1093/nar/gkw1009","title":"ResistomeAnalyzer"},{"location":"dependencies/#samtools","text":"Description: Samtools is a program for manipulating and extracting useful information from alignment files in SAM or BAM format. Version: 1.9 DOI: https://doi.org/10.1093/bioinformatics/btp352","title":"Samtools"},{"location":"dependencies/#snpfinder","text":"Description: SNPFinder is a haplotype variant caller that can be used for metagenomics datasets. Version: 0.0.0 DOI: https://doi.org/10.1093/nar/gkw1009","title":"SNPFinder"},{"location":"dependencies/#trimmomatic","text":"Description: Trimmomatic is a tool for removing low quality base pairs (bps) and adapter sequences from raw sequence data. Version: 0.39 DOI: https://doi.org/10.1093/bioinformatics/btu170","title":"Trimmomatic"},{"location":"dependencies/#freebayes","text":"Description: Trimmomatic is a tool for removing low quality base pairs (bps) and adapter sequences from raw sequence data. Version: 1.3.1 https://arxiv.org/abs/1207.3907v2","title":"Freebayes"},{"location":"dependencies/#resistance-gene-identifier","text":"Description: Trimmomatic is a tool for removing low quality base pairs (bps) and adapter sequences from raw sequence data. Version: 0.39 https://card.mcmaster.ca/analyze/rgi","title":"Resistance Gene Identifier"},{"location":"installation/","text":"Installation This section will help you get started with running the AmrPlusPlus pipeline with Nextflow and Docker. This tutorial assumes you will be running the pipeline from a POSIX compatible system such as Linux, Solaris, or OS X. Setup We will go over a typical pipeline setup scenario in which you connect to a remote server, install Nextflow, and download the pipeline source code. For the easist use of AmrPlusPlus, make sure that Singularity is installed and in your $PATH variable. Visit this website for further information: https://singularity.lbl.gov/docs-installation If Singularity cannot be installed, configure the \"config/local.config\" file to specify the absolute PATH to each required bioinformatic tool. Then, change the flag after \"-profile\" to \"local\" when running the pipeline. # username and host address $ ssh [ USER ] @ [ HOST ] # Check if you have nextflow installed, $ nextflow -h # If not available, install Nextflow $ curl -s https://get.nextflow.io | bash # If you do not have curl installed, try wget # $ wget -qO- https://get.nextflow.io | bash # give write permissions to user $ chmod u+x nextflow # move nextflow executable to a folder in your PATH environment variable $ mv nextflow $HOME /bin # create a test directory and change into it $ mkdir amr_test && cd amr_test # clone pipeline source code $ git clone https://github.com/meglab-metagenomics/amrplusplus_v2.git . Run a Simple Test We will run a small sample dataset that comes with the pipeline source code. As such, we will not be specifying any input paths as they have already been included. During the program's execution, the required tool dependencies will be accessed using a Singularity container. As there are many tool dependencies, downloading the container could take some time depending on your connection speed. # navigate into AmrPlusPlus repository $ cd amrplusplus_v2/ # command to run the amrplusplus pipeline $ nextflow run main_AmrPlusPlus_v2.nf -profile singularity --output test_results # change directories to view pipeline outputs $ cd test/","title":"Installation"},{"location":"installation/#installation","text":"This section will help you get started with running the AmrPlusPlus pipeline with Nextflow and Docker. This tutorial assumes you will be running the pipeline from a POSIX compatible system such as Linux, Solaris, or OS X.","title":"Installation"},{"location":"installation/#setup","text":"We will go over a typical pipeline setup scenario in which you connect to a remote server, install Nextflow, and download the pipeline source code. For the easist use of AmrPlusPlus, make sure that Singularity is installed and in your $PATH variable. Visit this website for further information: https://singularity.lbl.gov/docs-installation If Singularity cannot be installed, configure the \"config/local.config\" file to specify the absolute PATH to each required bioinformatic tool. Then, change the flag after \"-profile\" to \"local\" when running the pipeline. # username and host address $ ssh [ USER ] @ [ HOST ] # Check if you have nextflow installed, $ nextflow -h # If not available, install Nextflow $ curl -s https://get.nextflow.io | bash # If you do not have curl installed, try wget # $ wget -qO- https://get.nextflow.io | bash # give write permissions to user $ chmod u+x nextflow # move nextflow executable to a folder in your PATH environment variable $ mv nextflow $HOME /bin # create a test directory and change into it $ mkdir amr_test && cd amr_test # clone pipeline source code $ git clone https://github.com/meglab-metagenomics/amrplusplus_v2.git .","title":"Setup"},{"location":"installation/#run-a-simple-test","text":"We will run a small sample dataset that comes with the pipeline source code. As such, we will not be specifying any input paths as they have already been included. During the program's execution, the required tool dependencies will be accessed using a Singularity container. As there are many tool dependencies, downloading the container could take some time depending on your connection speed. # navigate into AmrPlusPlus repository $ cd amrplusplus_v2/ # command to run the amrplusplus pipeline $ nextflow run main_AmrPlusPlus_v2.nf -profile singularity --output test_results # change directories to view pipeline outputs $ cd test/","title":"Run a Simple Test"},{"location":"output/","text":"Output All intermediate outputs produced from each module of this pipeline are provided as flat files that can be viewed in a text editor. These files are copied from the root work/ directory created by Nextflow, so if disk space is a concern, this directory should be deleted as it can get quite large. Directory Structure The output directories created by the pipeline are named after the module that produced them. Each file output is prefixed with the sample name and suffixed with a short product description. Files without sample prefixes are a result of aggregation. For example, the files host.removal.stats and trimmomatic.stats provide count matrices for the number of reads discarded as a result of host-dna removal and number of trimmed reads for each sample. \u251c\u2500\u2500 RunQC \u2502 \u251c\u2500\u2500 Paired \u2502 \u2502 \u251c\u2500\u2500 SRR532663.1P.fastq \u2502 \u2502 \u2514\u2500\u2500 SRR532663.2P.fastq \u2502 \u251c\u2500\u2500 Stats \u2502 \u2502 \u2514\u2500\u2500 trimmomatic.stats \u2502 \u2514\u2500\u2500 Unpaired \u2502 \u251c\u2500\u2500 SRR532663.1U.fastq \u2502 \u2514\u2500\u2500 SRR532663.2U.fastq \u251c\u2500\u2500 BuildHostIndex \u2502 \u251c\u2500\u2500 chr21.fasta.amb \u2502 \u251c\u2500\u2500 chr21.fasta.ann \u2502 \u251c\u2500\u2500 chr21.fasta.bwt \u2502 \u251c\u2500\u2500 chr21.fasta.pac \u2502 \u2514\u2500\u2500 chr21.fasta.sa \u251c\u2500\u2500 AlignReadsToHost \u2502 \u2514\u2500\u2500 SRR532663.host.sam \u251c\u2500\u2500 NonHostReads \u2502 \u251c\u2500\u2500 SRR532663.non.host.R1.fastq \u2502 \u2514\u2500\u2500 SRR532663.non.host.R2.fastq \u251c\u2500\u2500 RemoveHostDNA \u2502 \u251c\u2500\u2500 HostRemovalStats \u2502 \u2502 \u2514\u2500\u2500 host.removal.stats \u2502 \u2514\u2500\u2500 NonHostBAM \u2502 \u2514\u2500\u2500 SRR532663.host.sorted.removed.bam \u251c\u2500\u2500 AlignToAMR \u2502 \u2514\u2500\u2500 SRR532663.amr.alignment.sam \u251c\u2500\u2500 RunResistome \u2502 \u2514\u2500\u2500 SRR532663.gene.tsv \u251c\u2500\u2500 ResistomeResults \u2502 \u2514\u2500\u2500 AMR_analytic_matrix.csv \u251c\u2500\u2500 RunRarefaction \u2502 \u251c\u2500\u2500 SRR532663.class.tsv \u2502 \u251c\u2500\u2500 SRR532663.gene.tsv \u2502 \u251c\u2500\u2500 SRR532663.group.tsv \u2502 \u2514\u2500\u2500 SRR532663.mech.tsv \u251c\u2500\u2500 RunKraken \u2502 \u2514\u2500\u2500 SRR532663.kraken.report \u2502 \u2514\u2500\u2500 SRR532663.kraken.filtered.report \u251c\u2500\u2500 KrakenResults \u2502 \u2514\u2500\u2500 kraken_analytic_matrix.csv \u251c\u2500\u2500 FilteredKrakenResults \u2502 \u2514\u2500\u2500 filtered_kraken_analytic_matrix.csv","title":"Output"},{"location":"output/#output","text":"All intermediate outputs produced from each module of this pipeline are provided as flat files that can be viewed in a text editor. These files are copied from the root work/ directory created by Nextflow, so if disk space is a concern, this directory should be deleted as it can get quite large.","title":"Output"},{"location":"output/#directory-structure","text":"The output directories created by the pipeline are named after the module that produced them. Each file output is prefixed with the sample name and suffixed with a short product description. Files without sample prefixes are a result of aggregation. For example, the files host.removal.stats and trimmomatic.stats provide count matrices for the number of reads discarded as a result of host-dna removal and number of trimmed reads for each sample. \u251c\u2500\u2500 RunQC \u2502 \u251c\u2500\u2500 Paired \u2502 \u2502 \u251c\u2500\u2500 SRR532663.1P.fastq \u2502 \u2502 \u2514\u2500\u2500 SRR532663.2P.fastq \u2502 \u251c\u2500\u2500 Stats \u2502 \u2502 \u2514\u2500\u2500 trimmomatic.stats \u2502 \u2514\u2500\u2500 Unpaired \u2502 \u251c\u2500\u2500 SRR532663.1U.fastq \u2502 \u2514\u2500\u2500 SRR532663.2U.fastq \u251c\u2500\u2500 BuildHostIndex \u2502 \u251c\u2500\u2500 chr21.fasta.amb \u2502 \u251c\u2500\u2500 chr21.fasta.ann \u2502 \u251c\u2500\u2500 chr21.fasta.bwt \u2502 \u251c\u2500\u2500 chr21.fasta.pac \u2502 \u2514\u2500\u2500 chr21.fasta.sa \u251c\u2500\u2500 AlignReadsToHost \u2502 \u2514\u2500\u2500 SRR532663.host.sam \u251c\u2500\u2500 NonHostReads \u2502 \u251c\u2500\u2500 SRR532663.non.host.R1.fastq \u2502 \u2514\u2500\u2500 SRR532663.non.host.R2.fastq \u251c\u2500\u2500 RemoveHostDNA \u2502 \u251c\u2500\u2500 HostRemovalStats \u2502 \u2502 \u2514\u2500\u2500 host.removal.stats \u2502 \u2514\u2500\u2500 NonHostBAM \u2502 \u2514\u2500\u2500 SRR532663.host.sorted.removed.bam \u251c\u2500\u2500 AlignToAMR \u2502 \u2514\u2500\u2500 SRR532663.amr.alignment.sam \u251c\u2500\u2500 RunResistome \u2502 \u2514\u2500\u2500 SRR532663.gene.tsv \u251c\u2500\u2500 ResistomeResults \u2502 \u2514\u2500\u2500 AMR_analytic_matrix.csv \u251c\u2500\u2500 RunRarefaction \u2502 \u251c\u2500\u2500 SRR532663.class.tsv \u2502 \u251c\u2500\u2500 SRR532663.gene.tsv \u2502 \u251c\u2500\u2500 SRR532663.group.tsv \u2502 \u2514\u2500\u2500 SRR532663.mech.tsv \u251c\u2500\u2500 RunKraken \u2502 \u2514\u2500\u2500 SRR532663.kraken.report \u2502 \u2514\u2500\u2500 SRR532663.kraken.filtered.report \u251c\u2500\u2500 KrakenResults \u2502 \u2514\u2500\u2500 kraken_analytic_matrix.csv \u251c\u2500\u2500 FilteredKrakenResults \u2502 \u2514\u2500\u2500 filtered_kraken_analytic_matrix.csv","title":"Directory Structure"},{"location":"references/","text":"References Bolger,A.M., Lohse,M. and Usadel,B. (2014) Trimmomatic: A flexible trimmer for Illumina Sequence Data. Bioinformatics, 10.1093/bioinformatics/btu170. Li,H. (2013) Aligning sequence reads, clone sequences and assembly contigs with BWA-MEM. ArXiv13033997 Q-Bio. Quinlan,A.R. and Hall,I.M. (2010) BEDTools: a flexible suite of utilities for comparing genomic features. Bioinformatics, 26, 841\u2013842. Li,H., Handsaker,B., Wysoker,A., Fennell,T., Ruan,J., Homer,N., Marth,G., Abecasis,G., Durbin,R. and 1000 Genome Project Data Processing Subgroup (2009) The Sequence Alignment/Map format and SAMtools. Bioinforma. Oxf. Engl., 25, 2078\u20132079. Wood,D.E., Lu,J. and Langmead,B. (2019) Improved metagenomic analysis with Kraken 2. bioRxiv, 10.1101/762302. Nextflow programming language (https://www.nextflow.io/) Singularity: Scientific containers for mobility of compute. (https://singularity.lbl.gov/)","title":"References"},{"location":"references/#references","text":"Bolger,A.M., Lohse,M. and Usadel,B. (2014) Trimmomatic: A flexible trimmer for Illumina Sequence Data. Bioinformatics, 10.1093/bioinformatics/btu170. Li,H. (2013) Aligning sequence reads, clone sequences and assembly contigs with BWA-MEM. ArXiv13033997 Q-Bio. Quinlan,A.R. and Hall,I.M. (2010) BEDTools: a flexible suite of utilities for comparing genomic features. Bioinformatics, 26, 841\u2013842. Li,H., Handsaker,B., Wysoker,A., Fennell,T., Ruan,J., Homer,N., Marth,G., Abecasis,G., Durbin,R. and 1000 Genome Project Data Processing Subgroup (2009) The Sequence Alignment/Map format and SAMtools. Bioinforma. Oxf. Engl., 25, 2078\u20132079. Wood,D.E., Lu,J. and Langmead,B. (2019) Improved metagenomic analysis with Kraken 2. bioRxiv, 10.1101/762302. Nextflow programming language (https://www.nextflow.io/) Singularity: Scientific containers for mobility of compute. (https://singularity.lbl.gov/)","title":"References"},{"location":"requirements/","text":"Software Requirements To run AmrPlusPlus, you will need the following libraries and tools installed on your server or local machine. Singularity Visit this website for further information: https://singularity.lbl.gov/docs-installation Java 7+ (Required) Nextflow (Required) Note If you choose not to install Singularity, you will need to download each of the required dependencies and add the executable paths to your .bashrc file to run the pipeline. A list of these dependencies can be found in the Dependencies section of this document.","title":"Software Requirements"},{"location":"requirements/#software-requirements","text":"To run AmrPlusPlus, you will need the following libraries and tools installed on your server or local machine. Singularity Visit this website for further information: https://singularity.lbl.gov/docs-installation Java 7+ (Required) Nextflow (Required) Note If you choose not to install Singularity, you will need to download each of the required dependencies and add the executable paths to your .bashrc file to run the pipeline. A list of these dependencies can be found in the Dependencies section of this document.","title":"Software Requirements"},{"location":"usage/","text":"Usage Display Help Message The help parameter displays the available options and commands. $ nextflow run main_AmrPlusPlus_v2.nf --help File Inputs Set custom sequence data The reads parameter accepts sequence files in standard fastq and gz format. $ nextflow run main_AmrPlusPlus_v2.nf --reads \"data/raw/*_R{1,2}.fastq\" Set host genome The host parameter accepts a fasta formatted host genome. $ nextflow run main_AmrPlusPlus_v2.nf --host \"data/host/chr21.fasta.gz\" Set host index The host_index parameter allows you to upload pre-built host indexes produced by BWA. $ nextflow run main_AmrPlusPlus_v2.nf --host \"data/host/chr21.fasta.gz\" --host_index \"data/index/*\" Set resistance database The amr parameter accepts a fasta formatted resistance database. $ nextflow run main_AmrPlusPlus_v2.nf --amr \"data/amr/megares_database_v1.02.fasta\" Set annotation database The annotation parameter accepts a csv formatted annotation database. $ nextflow run main_AmrPlusPlus_v2.nf --annotation \"data/amr/megares_annotations_v1.02.csv\" Set adapter file The adapters parameter accepts a fasta formatted adapter file. $ nextflow run main_AmrPlusPlus_v2.nf --adapters \"data/adapters/adapters.fa\" File Outputs Set output and work directories The output parameter writes the results to the specified directory. As a nextflow variable, the work parameter only requires one dash and determines where the temporary files will be directed. Upon completing the run, you can delete the temporary file directory. $ nextflow run main_AmrPlusPlus_v2.nf --output \"test/\" -work \"work_dir/\" Resume a pipeline run If the pipeline run is cancelled or stopped for whatever reason, using the same command with the addition of the -resume flag will attempt to pick up where the pipeline stopped. $ nextflow run main_AmrPlusPlus_v2.nf --output \"test/\" -work \"work_dir/\" -resume Trimming Options Set custom trimming parameters $ nextflow run main_AmrPlusPlus_v2.nf \\ --reads \"data/raw/*_R{1,2}.fastq\" \\ --leading 3 \\ --trailing 3 \\ --minlen 36 \\ --slidingwindow 4 \\ --adapters \"data/adapters/nextera.fa\" --output \"test/\" Algorithm Options Set custom algorithm options $ nextflow run main_AmrPlusPlus_v2.nf \\ --reads \"data/raw/*_R{1,2}.fastq\" \\ --threshold 80 \\ --min 1 \\ --max 100 \\ --samples 5 \\ --skip 5 \\ --output \"test/\" Set number of threads to use for each process $ nextflow run main_AmrPlusPlus_v2.nf --threads 8","title":"Usage"},{"location":"usage/#usage","text":"","title":"Usage"},{"location":"usage/#display-help-message","text":"The help parameter displays the available options and commands. $ nextflow run main_AmrPlusPlus_v2.nf --help","title":"Display Help Message"},{"location":"usage/#file-inputs","text":"","title":"File Inputs"},{"location":"usage/#set-custom-sequence-data","text":"The reads parameter accepts sequence files in standard fastq and gz format. $ nextflow run main_AmrPlusPlus_v2.nf --reads \"data/raw/*_R{1,2}.fastq\"","title":"Set custom sequence data"},{"location":"usage/#set-host-genome","text":"The host parameter accepts a fasta formatted host genome. $ nextflow run main_AmrPlusPlus_v2.nf --host \"data/host/chr21.fasta.gz\"","title":"Set host genome"},{"location":"usage/#set-host-index","text":"The host_index parameter allows you to upload pre-built host indexes produced by BWA. $ nextflow run main_AmrPlusPlus_v2.nf --host \"data/host/chr21.fasta.gz\" --host_index \"data/index/*\"","title":"Set host index"},{"location":"usage/#set-resistance-database","text":"The amr parameter accepts a fasta formatted resistance database. $ nextflow run main_AmrPlusPlus_v2.nf --amr \"data/amr/megares_database_v1.02.fasta\"","title":"Set resistance database"},{"location":"usage/#set-annotation-database","text":"The annotation parameter accepts a csv formatted annotation database. $ nextflow run main_AmrPlusPlus_v2.nf --annotation \"data/amr/megares_annotations_v1.02.csv\"","title":"Set annotation database"},{"location":"usage/#set-adapter-file","text":"The adapters parameter accepts a fasta formatted adapter file. $ nextflow run main_AmrPlusPlus_v2.nf --adapters \"data/adapters/adapters.fa\"","title":"Set adapter file"},{"location":"usage/#file-outputs","text":"","title":"File Outputs"},{"location":"usage/#set-output-and-work-directories","text":"The output parameter writes the results to the specified directory. As a nextflow variable, the work parameter only requires one dash and determines where the temporary files will be directed. Upon completing the run, you can delete the temporary file directory. $ nextflow run main_AmrPlusPlus_v2.nf --output \"test/\" -work \"work_dir/\"","title":"Set output and work directories"},{"location":"usage/#resume-a-pipeline-run","text":"If the pipeline run is cancelled or stopped for whatever reason, using the same command with the addition of the -resume flag will attempt to pick up where the pipeline stopped. $ nextflow run main_AmrPlusPlus_v2.nf --output \"test/\" -work \"work_dir/\" -resume","title":"Resume a pipeline run"},{"location":"usage/#trimming-options","text":"","title":"Trimming Options"},{"location":"usage/#set-custom-trimming-parameters","text":"$ nextflow run main_AmrPlusPlus_v2.nf \\ --reads \"data/raw/*_R{1,2}.fastq\" \\ --leading 3 \\ --trailing 3 \\ --minlen 36 \\ --slidingwindow 4 \\ --adapters \"data/adapters/nextera.fa\" --output \"test/\"","title":"Set custom trimming parameters"},{"location":"usage/#algorithm-options","text":"","title":"Algorithm Options"},{"location":"usage/#set-custom-algorithm-options","text":"$ nextflow run main_AmrPlusPlus_v2.nf \\ --reads \"data/raw/*_R{1,2}.fastq\" \\ --threshold 80 \\ --min 1 \\ --max 100 \\ --samples 5 \\ --skip 5 \\ --output \"test/\"","title":"Set custom algorithm options"},{"location":"usage/#set-number-of-threads-to-use-for-each-process","text":"$ nextflow run main_AmrPlusPlus_v2.nf --threads 8","title":"Set number of threads to use for each process"}]}